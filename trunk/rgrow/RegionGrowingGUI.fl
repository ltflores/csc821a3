# data file for the Fltk User Interface Designer (fluid)
version 1.0300 
header_name {.h} 
code_name {.cxx}
class RegionGrowingGUI {open : {public RegionGrowingBase}
} {
  Function {RegionGrowingGUI()} {open
  } {
    Fl_Window consoleWindow {
      label {Region Growing} open
      xywh {-32000 -32000 543 362} type Double hide
      code0 {\#include <RegionGrowingBase.h>}
      code1 {\#include <fltkLightButton.h>}
    } {
      Fl_Group controlsGroup {open
        xywh {10 25 520 270}
      } {
        Fl_Group seedGroup {
          label {Seed Point} open
          xywh {295 40 235 60}
        } {
          Fl_Value_Output xSeedPointValueOutput {
            label x
            xywh {345 51 40 24} step 0.01
          }
          Fl_Value_Output ySeedPointValueOutput {
            label y
            xywh {410 51 40 24} step 0.01
          }
          Fl_Value_Output zSeedPointValueOutput {
            label z
            xywh {470 51 40 24} step 0.01
          }
        }
        Fl_Button {} {
          label {Connected Threshold}
          callback {m_ConnectedThresholdImageFilter->Update();}
          xywh {25 130 170 25} box ROUNDED_BOX
        }
        Fl_Counter lowerThresholdCounter {
          label lower
          callback {m_ConnectedThresholdImageFilter->SetLower( static_cast<InputPixelType>( o->value() ) );}
          xywh {210 130 135 20} minimum 0 maximum 65535 step 1 value 100
          code0 {o->lstep(10.0);}
        }
        Fl_Counter upperThresholdCounter {
          label upper
          callback {m_ConnectedThresholdImageFilter->SetUpper( static_cast<InputPixelType>( o->value() ) );}
          xywh {370 130 125 20} minimum 0 maximum 65535 step 1 value 200
          code0 {o->lstep( 10.0 );}
        }
        Fl_Light_Button thresholdConnectedImageButton {
          label {show image}
          callback {this->ShowConnectedThresholdImage();}
          xywh {215 185 105 20} type Normal selection_color 1
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {confidence connected}
          callback {m_ConfidenceConnectedImageFilter->Update();}
          xywh {23 237 170 30} box ROUNDED_BOX
        }
        Fl_Value_Input multiplierValueInput {
          label multiplier
          callback {m_ConfidenceConnectedImageFilter->SetMultiplier( o->value() );}
          xywh {270 239 50 24} maximum 100 value 2.5
        }
        Fl_Value_Input iterationsConfidenceValueInput {
          label iterations
          callback {m_ConfidenceConnectedImageFilter->SetNumberOfIterations( static_cast<unsigned int>( o->value() ) );}
          xywh {400 238 50 24} minimum 1 maximum 100 value 2
        }
        Fl_Light_Button confidenceConnectedImageButton {
          label {show image}
          callback {this->ShowConfidenceConnectedImage();}
          xywh {225 270 105 20} type Normal
          class {fltk::LightButton}
        }
        Fl_Light_Button inputImageButton {
          label inputImagButton
          callback {ShowInputImage()}
          xywh {170 60 135 20} type Normal
          class {fltk::LightButton}
        }
        Fl_Light_Button homogeneousImageButton {
          label {homogeneous Image}
          callback {ShowHomogeneousImage();}
          xywh {350 90 155 20} type Normal
          class {fltk::LightButton}
        }
      }
      Fl_Button {} {
        label quit
        callback {this->Quit();}
        xywh {230 315 90 30} box ROUNDED_BOX
      }
      Fl_Button {} {
        label {load file}
        callback {this->LoadInputImage();}
        xywh {35 20 90 35} box ROUNDED_BOX align 128
      }
      Fl_Button {} {
        label {load DICOM}
        callback {this->LoadInputImageSeries();} selected
        xywh {35 65 90 35} box ROUNDED_BOX
      }
    }
  }
  Function {~RegionGrowingGUI()} {open
  } {}
  Function {Quit( void )} {open return_type {virtual void}
  } {}
  Function {Load( void )} {open return_type {virtual void}
  } {}
  Function {ShowInputImage( void )} {open return_type {virtual void}
  } {}
  Function {ShowConnectedThresholdImage( void )} {open return_type {virtual void}
  } {}
  Function {ShowConsole( void )} {open return_type {virtual void}
  } {}
  Function {ShowConfidenceConnectedImage( void )} {open return_type {virtual void}
  } {}
  Function {UpdateExtract()} {open return_type {virtual void}
  } {}
  Function {ShowHomogeneousImage( void )} {open return_type {virtual void}
  } {}
  Function {LoadDicom( void )} {open return_type {virtual void}
  } {}
} 
